imports:
    - { resource: services/cloning.yml }
    - { resource: services/console.yml }
    - { resource: services/event-subscribers.yml }
    - { resource: services/factory.yml }
    - { resource: services/identity.yml }
    - { resource: services/integration.yml }
    - { resource: services/question-types.yml }
    - { resource: services/security.yml }
    - { resource: services/submission.yml }

parameters: ~

services:
    app_bundle.caching.response_cache:
        class: AppBundle\Caching\ResponseCache
        arguments: [ "@kernel" ]

    app_bundle.core.account_manager:
        class: AppBundle\Core\AccountManager
        arguments: [ "%framework_version%" ]

    app_bundle.core.application_query:
        class: AppBundle\Core\ApplicationQuery
        arguments: [ "@as3_modlr.store" ]

    app_bundle.core.persistence_prefixer:
        private: true
        class: AppBundle\Core\PersistencePrefixer
        arguments: [ "@app_bundle.core.account_manager" ]
        tags:
            - { name: as3_modlr.event_subscriber }

    app_bundle.core.redis_cache_manager:
        private: true
        class: AppBundle\Core\RedisCacheManager

    app_bundle.core.subscriber.console:
        private: true
        class: AppBundle\Core\ConsoleSubscriber
        arguments: [ "@app_bundle.core.account_manager", "@app_bundle.core.application_query", "@app_bundle.core.redis_cache_manager" ]
        tags:
            - { name: kernel.event_subscriber }

    app_bundle.core.subscriber.kernel:
        private: true
        class: AppBundle\Core\KernelSubscriber
        arguments: [ "@app_bundle.core.account_manager", "@app_bundle.core.application_query", "@security.http_utils", "@app_bundle.core.redis_cache_manager" ]
        tags:
            - { name: kernel.event_subscriber }

    app_bundle.cors.listener:
        private: true
        class: AppBundle\Cors\CorsListener
        arguments: [ "@app_bundle.core.account_manager" ]
        tags:
            - { name: kernel.event_subscriber }

    app_bundle.data_formatter.mongo_db:
        class: AppBundle\DataFormatter\MongoDBFormatter

    app_bundle.definitions.factory:
        class: AppBundle\Definitions\DefinitionFactory
        arguments: [ "@app_bundle.question.type_manager" ]

    app_bundle.exception_controller.app:
        class: AppBundle\Controller\App\ExceptionController
        arguments: ['@twig', '%kernel.debug%']

    app_bundle.input.submission_manager:
        class: AppBundle\Input\SubmissionManager
        arguments: [ "@app_bundle.question.answer_factory" ]

    app_bundle.integrations.client.omeda:
        private: true
        class: AppBundle\Integrations\Clients\OmedaClient
        arguments: [ "@app_bundle.omeda_sdk.api_client", "@app_bundle.definitions.factory" ]

    app_bundle.integrations.handler.question_pull:
        private: true
        class: AppBundle\Integrations\Handlers\QuestionPullHandler

    app_bundle.integrations.manager:
        class: AppBundle\Integrations\IntegrationManager
        arguments: [ "@as3_modlr.store" ]
        calls:
            - [ addClient,  [ "@app_bundle.integrations.client.omeda" ] ]
            - [ addHandler, [ "@app_bundle.integrations.handler.question_pull" ] ]

    app_bundle.omeda_sdk.api_client:
        class: As3\OmedaSDK\ApiClient

    app_bundle.post_process.plugins.new_relic:
        private: true
        class: AppBundle\PostProcess\NewRelicPlugin
        arguments: [ "@app_bundle.core.account_manager" ]
        tags:
            - { name: as3_post_process.plugin }

    app_bundle.serializer.public_api:
        class: AppBundle\Serializer\PublicApiSerializer

    app_bundle.twig.library_extension:
        class: AppBundle\Twig\LibraryExtension
        arguments: [ "@app_bundle.core.account_manager" ]
        tags:
            - { name: twig.extension }
