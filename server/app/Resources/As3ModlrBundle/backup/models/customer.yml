customer:
    entity:
        abstract: true
        polymorphic: true
        persistence:
            key: mongodb
            db: radix
            schemata:
                -
                    keys:
                        "credentials.password.username": 1
                    options:
                        unique: true
                        partialFilterExpression:
                            "credentials.password.username":
                                "$exists": true
                -
                    keys:
                        "credentials.social.identifier": 1
                    options:
                        unique: true
                        partialFilterExpression:
                            "credentials.social.identifier":
                                "$exists": true
                -
                    keys:
                        "credentials.password.resetCode": 1
                    options:
                        unique: true
                        partialFilterExpression:
                            "credentials.password.resetCode":
                                "$exists": true
                -
                    keys:
                        primaryEmail: 1
                    options:
                        unique: true
                        partialFilterExpression:
                            _type: "customer-identity"
                - { keys: { _id: 1, _type: 1 }, options: { unique: true }}

    mixins: [ 'timestampable', 'soft-deleteable' ]
    attributes:
        givenName:
            type: string
        familyName:
            type: string
        middleName:
            type: string
        salutation:
            type: string
        suffix:
            type: string
        gender:
            type: string # Male, Female, Non-Binary, Unknown
            defaultValue: Unknown
        title:
            type: string
        companyName:
            type: string
        primaryPhone:
            type: object
            calculated:
                class: AppBundle\CalculatedFields
                method: customerPrimaryPhone
        primaryAddress:
            type: object
            calculated:
                class: AppBundle\CalculatedFields
                method: customerPrimaryAddress
        fullName:
            type: string
            calculated:
                class: AppBundle\CalculatedFields
                method: customerFullName
    embeds:
        externalIds:
            type: many
            entity: external-identifier
        phones:
            type: many
            entity: customer-phone
    relationships:
        addresses:
            type: many
            entity: customer-address
            inverse: true
            field: customer
        answers:
            type: many
            entity: customer-answer
            inverse: true
            field: customer
        submissions:
            type: many
            entity: input-submission
            inverse: true
            field: customer

# For answers:
# Need to determine ALL answers currently associated with the user??
# Need to see the most current answers for the customer
# Need to store all input submissions (e.g. form or third-party pull integration)
# Eventually need to roll an answer down to the root fields?
# Need to determine how answers will be linked to demographics, to prevent overwrites??
