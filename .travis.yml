language: node_js
node_js: 10.15

env:
  global:
    - SYMFONY_ENV=test
    - APP_ENV=test
    - NODE_ENV=test

cache:
  yarn: true
  directories:
    - services/server/vendor

_php-job: &php-job
  language: php
  php: "5.6"
  services: [mongodb, redis]
  addons: { hosts: [mongo, redis] }
  before_install:
    - phpenv global 5.6
    - echo "extension = mongo.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
    - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
    - phpenv config-rm xdebug.ini
  install:
    - (cd services/server; composer install --no-interaction --prefer-dist)
  script:
    - (cd services/server; php bin/console assetic:dump --env=test --no-debug)
    - (cd services/server; bin/phpunit)

stages:
  - name: test

  - name: build
    # if: tag =~ /^v\d+\.\d+\.\d+$/

  - name: production-started
    if: tag =~ /^v\d+\.\d+\.\d+$/
  - name: production
    if: tag =~ /^v\d+\.\d+\.\d+$/
  - name: production-finished
    if: tag =~ /^v\d+\.\d+\.\d+$/

jobs:
  include:
    - stage: test
      name: Test admin build
      node_js: 8
      before_install: cd services/admin
      # install: yarn install --frozen-lockfile
      script: yarn test

    - stage: test
      name: Test graph build
      node_js: 8
      before_install: cd services/graph
      # install: yarn install --frozen-lockfile
      script: yarn test

    - <<: *php-job
      stage: test
      name: Test server build

    - stage: build
      name: Build admin
      install:
        - cd services/admin
        - yarn install
        - embed build --environment=production
        - cd ../..
      script: scripts/build-image.sh admin $TRAVIS_COMMIT

    - stage: build
      name: Build graph
      install:
        - cd services/graph
        - yarn install --production
        - cd ../..
      script: scripts/build-image.sh graph $TRAVIS_COMMIT

    - <<: *php-job
      stage: build
      name: Build server
      env: [SYMFONY_ENV=prod APP_ENV=prod]
      install:
        - cd services/server
        - bin/composer install --optimize-autoloader --no-interaction --prefer-dist --no-dev
        - bin/console assetic:dump --env=prod
        - cd ../..
      script: scripts/build-image.sh server $TRAVIS_COMMIT

    # - stage: production-started
    #   name: Deployment Started
    #   script: npx @base-cms/website-deployment-tool notify-started
    #   install: skip
    #   env: [ENVIRONMENT=production RANCHER_CLUSTERID=c-gxsr7]

    # #############################
    # # vvv ADD SERVICES HERE vvv #
    # #############################

    # - stage: production
    #   name: Graph Service
    #   script: npx @endeavorb2b/rancher2cli deploy baseplatform-service radix-graph endeavorb2b/radix-graph:$TRAVIS_TAG
    #   install: skip
    #   env: [ENVIRONMENT=production RANCHER_CLUSTERID=c-gxsr7]

    # - stage: production
    #   name: PHP Server Service
    #   script: npx @endeavorb2b/rancher2cli deploy baseplatform-service radix-server endeavorb2b/radix-server:$TRAVIS_TAG
    #   install: skip
    #   env: [ENVIRONMENT=production RANCHER_CLUSTERID=c-gxsr7]

    # - stage: production
    #   name: Management Service
    #   script: npx @endeavorb2b/rancher2cli deploy baseplatform-service radix-admin endeavorb2b/radix-admin:$TRAVIS_TAG
    #   install: skip
    #   env: [ENVIRONMENT=production RANCHER_CLUSTERID=c-gxsr7]

    # #############################
    # # ^^^ ADD SERVICES HERE ^^^ #
    # #############################

    # - stage: production-finished
    #   name: Deployment Finished
    #   script: npx @base-cms/website-deployment-tool notify-finished
    #   install: skip
    #   env: [ENVIRONMENT=production RANCHER_CLUSTERID=c-gxsr7]
