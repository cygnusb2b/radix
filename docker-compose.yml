version: '3'
services:
  graph:
    tty: true
    image: node:8
    entrypoint: yarn start
    working_dir: /app
    volumes:
      - ./graph:/app:cached
      - graph_node_modules:/app/node_modules:cached
    depends_on:
      - mongo
      - server
    ports:
      - "8700:8700"
    environment:
      PORT: 8700
      APP_HOST: "${APP_HOST-server}:80"
      MONGO_DSN: ${MONGO_DSN-mongodb://mongo/radix}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY-not-set}
      SENDGRID_FROM: ${SENDGRID_FROM-not-set}
      JWT_SECRET: ${JWT_SECRET-not-set}

  server_install:
    image: radix_server:latest
    build:
      context: server/
      dockerfile: docker/Dockerfile
    entrypoint: /app/entrypoint.sh
    depends_on:
      - redis
      - mongo
    volumes:
      - ./server:/var/www/html:cached
      - server_vendor:/var/www/html/vendor:cached
      - server_cache:/var/www/html/var/cache:cached
      - server_composer:/var/www/.composer/cache:cached
    environment:
      APP: ${APP-cygnus:ofcr}
      COMPOSER_ALLOW_SUPERUSER: 1
      COMPOSER_NO_INTERACTION: 1

  server:
    tty: true
    image: radix_server:latest
    build:
      context: server/
      dockerfile: docker/Dockerfile
    ports:
      - "8710:80"
    volumes:
      - ./server:/var/www/html:cached
      - server_vendor:/var/www/html/vendor:cached
      - server_cache:/var/www/html/var/cache:cached
    environment:
      APP: ${APP-cygnus:ofcr}
      SYMFONY_MAILER_PASSWORD: ${SYMFONY_MAILER_PASSWORD-not-set}
      SYMFONY_SECRET: ${SYMFONY_SECRET-not-set}
      MONGO_DSN: ${MONGO_DSN-mongodb://mongo/radix}
      REDIS_DSN: ${REDIS_DSN-redis://redis}
    depends_on:
      - server_install
      - redis
      - mongo

  mongo:
    image: mongo:3.4
    volumes:
      - mongo:/data/db:cached
    ports:
      - "8701:27017"

  redis:
    image: redis:alpine
    ports:
      - "8702:6379"

  admin_install:
    tty: true
    image: danlynn/ember-cli:3.1.2
    volumes:
      - ./admin:/myapp:cached
      - ember_node_modules:/myapp/node_modules:cached
      - ember_tmp:/myapp/tmp
    restart: on-failure
    working_dir: /myapp
    entrypoint: yarn

  admin:
    tty: true
    image: danlynn/ember-cli:3.1.2
    ports:
      - "8705:8705"
      - "8706:8706"
      - "8707:8707"
    depends_on:
      - admin_install
      - server
      - graph
    volumes:
      - ./admin:/myapp:cached
      - ember_node_modules:/myapp/node_modules:cached
      - ember_tmp:/myapp/tmp
    restart: on-failure
    entrypoint: "./node_modules/.bin/ember server --port 8705 --live-reload-port 8706 --proxy ${EMBER_PROXY-http://host.docker.internal:8700}"

volumes:
  server_cache:
    driver_opts:
      type: tmpfs
      device: tmpfs
  server_vendor: {}
  server_composer: {}
  mongo: {}
  ember_node_modules: {}
  graph_node_modules: {}
  ember_tmp:
    driver_opts:
      type: tmpfs
      device: tmpfs
